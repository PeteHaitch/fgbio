name: unit tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true
      - name: Checkout LFS objects
        run: git lfs checkout        
      - name: Setup Scala
        uses: olafurpg/setup-scala@v12
        with:
          java-version: adopt-openj9@1.8.0-292
      - name: Unit Tests
        run: |
          set -e
          sbt +clean coverage +test && sbt coverageReport coverageAggregate && (find $HOME/.sbt -name "*.lock" | xargs rm) && (find $HOME/.ivy2 -name "ivydata-*.properties" | xargs rm)
      - name: Code Coverage
        uses: codecov/codecov-action@v1
        with:
          flags: unittests # optional
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)
      - name: Cache .ivy2
        uses: actions/cache@v2
        with:
          path: ~/.ivy2
          key: ${{ runner.os }}-ivy2-${{ hashFiles('**/build.sbt') }}
      - name: Cache .sbt
        uses: actions/cache@v2
        with:
          path: ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.properties') }}
  release:
    if: github.repository == 'fulcrumgenomics/fgbio' && github.ref == 'refs/heads/main'
    
    needs: test
    runs-on: ubuntu-latest
    env:
      SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
      SONATYPE_PASS: ${{ secrets.SONATYPE_PASS }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Scala
        uses: olafurpg/setup-scala@v12
        with:
          java-version: adopt-openj9@1.8.0-292
      - name: Upload to Sonatype
        run: |
          sbt +publish

 docs:
    name: update tool and metric markdown docs
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          # To work with the `pull_request` or any other non-`push` even with git-auto-commit
          ref: ${{ github.head_ref }}
      - name: Setup sdkman
        shell: bash -l {0}
        run: |
          curl -s "https://get.sdkman.io" | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk version
          echo 'source "$HOME/.sdkman/bin/sdkman-init.sh"' >> "$HOME/.bash_profile"
      - name: Install tools
        shell: bash -l {0}
        run: |
          sdk install java 8.312.07.1-amzn
          sdk install scala 2.13.0
      - name: Build assembly JAR
        shell: bash -l {0}
        run: |
          set -e
          sbt +assembly
      - name: Build tool docs
        shell: bash -l {0}
        run: |
          set -e
          mkdir -p docs/tools
          java -cp target/scala-2.13/fgbio-*.jar com.fulcrumgenomics.internal.InternalTools BuildToolDocs -o docs/tools
      - name: Build metric docs
        shell: bash -l {0}
        run: |
          set -e
          bash src/scripts/run_metrics_doclet.sh
      - name: Commit generated docs
        shell: bash -l {0}
        run: |
          git add docs/tools/*md
          git add docs/*md
          git config --global user.name "Github Actions"
          git config --global user.email "nobody@fulcrumgenomics.com"
          git commit --all --message "Generate docs files" --author "Nobody <nobody@fulcrumgenomics.com>" || echo "nothing to commit"
          git push --set-upstream origin "HEAD:${{ github.head_ref }}" --follow-tags --atomic
